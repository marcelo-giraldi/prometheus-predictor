1. No startup:
  1. Verifica se há modelo gravado em disco
  2. Se não: 
    1. Faz a consulta full
    2. Roda o modelo
    3. Grava o modelo em disco
  3. Se sim: 
    1. Carrega o modelo do disco
    2. Faz a consulta parcial (data atual menos a última data do modelo)
    3. Roda o modelo
    4. Grava o modelo em disco

2. A cada x tempo (tempo de retreino): 
  1. Faz a consulta parcial (data atual menos a última data do modelo)
  2. Roda o modelo
  3. Grava o modelo em disco

3. Get
  1. Pega os dados mais próximos de agora
  2. Monta a página


Os dados à frente (predição) devem ser de 3 vezes o retraining_interval


Retorno do prom_client:

query:
[
    {
        "metric": {
            "__name__": "prometheus_http_request_duration_seconds_count",
            "handler": "/alerts",
            "instance": "demo.robustperception.io:9090",
            "job": "prometheus"
        },
        "value": [
            1621509622.008,
            "15"
        ]
    }
]

query_range:
[
    {
        'metric': {
            '__name__': 'prometheus_http_requests_total', 
            'code': '200', 
            'handler': '/status', 
            'instance': 'demo.robustperception.io: 9090', 
            'job': 'prometheus'
        }, 'values': [
            [
                1621429391, '2'
            ],
            [
                1621429451, '2'
            ],
            [
                1621429511, '2'
            ],
            [
                1621429571, '2'
            ],
            [
                1621429631, '2'
            ],
            [
                1621429691, '2'
            ],
            [
                1621429751, '2'
            ],
            [
                1621429811, '2'
            ],
            [
                1621429871, '2'
            ],
            [
                1621429931, '2'
            ],
            [
                1621429991, '2'
            ]
        ]
    },
    {
        'metric': {
            '__name__': 'prometheus_http_requests_total', 'code': '200', 'handler': '/targets', 'instance': 'demo.robustperception.io: 9090', 'job': 'prometheus'
        }, 'values': [
            [
                1621429391, '2'
            ],
            [
                1621429451, '2'
            ],
            [
                1621429511, '2'
            ],
            [
                1621429571, '2'
            ],
            [
                1621429631, '2'
            ],
            [
                1621429691, '2'
            ],
            [
                1621429751, '2'
            ],
            [
                1621429811, '2'
            ],
            [
                1621429871, '2'
            ],
            [
                1621429931, '2'
            ],
            [
                1621429991, '2'
            ]
        ]
    }
]

[
    {
        "expr": "sum(irate(alertmanager_http_request_duration_seconds_count[5m]))",
        "params": {
            "retraining_interval": "6h",
            "training_window": "21d",
            "resolution": "15s",
            "daily_seasonality": True
        },
        "group": "alertmanager",
        "name": "saturation"
    },
    {
        "expr": "sum(irate(alertmanager_http_request_duration_seconds_sum[5m])) / sum(irate(alertmanager_http_request_duration_seconds_count[5m]))",
        "params": {
            "training_window": "90d",
            "resolution": "1h"
        },
        "group": "alertmanager",
        "name": "latency"
    }
]